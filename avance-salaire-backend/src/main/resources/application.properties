# ============================================================
# =           APPLICATION CONFIGURATION (DO NOT HARD-CODE)  =
# ============================================================

# Application
spring.application.name=avance-salaire-backend
server.port=9009
server.servlet.context-path=/

# Server Configuration
server.port=9009
server.servlet.context-path=/
server.error.include-message=always
server.error.include-binding-errors=always

# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.oauth2-redirect-url=/swagger-ui/oauth2-redirect.html
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.display-query-params-without-auth=true
springdoc.swagger-ui.use-root-path=true
springdoc.swagger-ui.validator-url=
springdoc.api-docs.enabled=true
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json

# Security Configuration for Swagger
springdoc.show-actuator=true
springdoc.paths-to-exclude=/actuator/**,/error
springdoc.packagesToScan=com.soprahr.avancesalairebackend.controller
springdoc.cache.disabled=true

# CORS Configuration
cors.allowed-origins=*
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Security Headers for Swagger
springdoc.cache.allow=true
springdoc.cache.ttl=3600

# Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10

# JPA/Hibernate
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# reCAPTCHA Configuration
recaptcha.secret=${RECAPTCHA_SECRET}
recaptcha.verify-url=https://www.google.com/recaptcha/api/siteverify

# Security Headers
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=lax

# Logging
logging.level.root=INFO
logging.level.com.soprahr.avancesalairebackend=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Actuator (for monitoring)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized
management.endpoint.health.roles=ADMIN
management.endpoint.metrics.enabled=true

# Email Configuration
spring.mail.host=smtp.office365.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Disable mail health check to prevent startup failure
management.health.mail.enabled=false
