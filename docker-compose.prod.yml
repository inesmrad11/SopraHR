version: '3.8'

services:
  # Backend Service (Production)
  backend:
    build:
      context: ./avance-salaire-backend
      dockerfile: Dockerfile
    ports:
      - "9009:9009"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - RECAPTCHA_SECRET=${RECAPTCHA_SECRET}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    depends_on:
      - mysql
    networks:
      - soprahr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9009/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service (Production)
  frontend:
    build:
      context: ./avance-salaire-frontend
      dockerfile: Dockerfile
    ports:
      - "80:4200"
    environment:
      - NODE_ENV=production
    networks:
      - soprahr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database (Production)
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./avance-salaire-backend/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - soprahr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - soprahr-network
    restart: unless-stopped

networks:
  soprahr-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 